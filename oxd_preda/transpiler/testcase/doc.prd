///ContractA Comment
///Comment line 1
///Comment line 2
[anno0 = true, anno1 = "", anno2 = 1u64]
contract ContractA
{
	///@var uint32 state_var_32
	@shard uint32 state_var_32;
	///@var uint64 state_var_64
	@shard uint64 state_var_64;
	@shard bigint bigint_64;

	///@var address_var_1
	@address address address_var_1;
	///@var address_var_2
	@address address address_var_2;
	@address address address_var_3;

	///Enum E
	///@var E0
	///@var E1
	enum E{
		E0,
		E1
	}

	///Enum G
	///@var G0
	///@var G1
	enum G{
		G0,
		G1
	}
	///Struct S0
	///@var uint32 i
	///@var enum E
	///@var array<E> ae
	///@var array<uint32> au32
	struct S0{
		int32 i;
		E e;
		array<E> ae;
		array<uint32> au32;
	}

	/**
	* Struct S
	* @var int32 s99
	**/
    struct S{
        int32 s99;
    }

    /** 
    *transaction_f export
    *@param array<S> vs
	*@return uint16 0
    **/
	@address function uint16 transaction_f(const array<S> vs) export
	{
		//m_s = s;
		return 0u16;
	}

	/**
	*hhh export
    *@param none
	*@return void
	**/
	@address function hhh() export{
		transaction_type t = transaction_type.normal_type;
		__block.get_secure_random_number();
	}

	/**
	*f export
    *@param S s
	*@return void
	**/
	@address function f(S s) export
	{
		uint32(1);
		array<E> ae;
		array<uint32> au32;
		ContractA.S0(1, E.E0, ae, au32);
		//address a;
		//relay@a (){
		// 	address a;
		// 	//hhh();			// compile error: block dependency of entropy and cannot issue relay call directly or indirectly
		// 	relay@a (){
		// 	}
		//}
	}

	@address function const S0 h(S0 s0, S s, array<map<uint32, array<S0>>> aaa) public
	{
		return aaa[0u32][1u32][2u32];
	}

}